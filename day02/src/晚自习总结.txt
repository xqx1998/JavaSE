1.标识符和类型转换
	1.1 标识符：给类、方法、变量取得名字。
		命名规则：违反一条就编译报错
			1.只能有数字、字母、_、$
			2.不能以数字开头。
			3.不能使用关键字。
			4.java区分大小写。
		命名规范：尽量遵循这个规范。
			小驼峰式命名法：第一个单词首字母小写，后面每个单词的首字母大写。适用于方法、变量命名
			大驼峰式命名法：所有单词的首字母大写。适用于类名词
			
		总结：名词遵循小驼峰式或者大驼峰式。
		
	1.2 类型转换
		自动类型转换：小范围类型的数据赋值给大范围类型的变量，可以自动转换类型。
		强制类型转换：大范围类型的数据赋值给小范围类型的变量，需要强制类型转换。
			语法：小范围类型 变量=(小范围类型)大范围类型的数据;  例如：int a=(int)13.14;
		
		总结：大范围类型的数据赋值给小范围类型的变量，需要强制类型转换。
		
2.运算符
	2.1 算术运算符
		+	-	*	/	%
		+运算符：
			字符+运算：将字符在计算机中对应的数值进行相加，例如 char ch='A'; ch+1//结果是：66
				A对应的值是65，a对应的值是97；
			字符串+运算：任何数据和字符串相加都是在做字符串拼接。
			
			类型提升问题：
				1.byte、short、char在参与运算时会自动提升为int类型。
				2.在算术运算中，如果变量的类型不一致，那么最终的结果类型就是变量中的最大类型。int+double->double
	2.2 赋值运算符
		=	+=	-=	*=	/=	%=
		例如：a+=10相当于a=a+10,但是这两种写法略微有区别？a+=10隐含了一个强制类型转换。
	2.3 自增自减运算符
		++	--
		1.单独使用时，前置++和后置++没有任何区别。 例如：a++; (常用)
		2.参与运算或者打印时：
			前置++：变量先+1，再使用
			后置++：先使用，变量后+1；
			
	2.4 关系运算符
		==	!=	>	>=	<	<=
		关系运算符的结果是一个boolean类型的true或者false。
		
	2.5 逻辑运算符
		&和&&：与运算,与运算前后都为true结果才是true，区别：&&会短路，如果左边为false，右边就不执行了
		|和||：或运算,或匀速前后都为false结果才是false，区别：||会短路，如果左边为true，右边就不执行了。
		!运算：取反，原来是true，取反就是false。
		
	2.6 三元运算符(常用)
		语法:
			数据类型 变量名=关系表达式?值1:值2;
			例如：int max=a>b?a:b;
		案例：两只老虎
		案例：三个和尚
2.3 键盘录入
	用到了一个Scanner类型，使用步骤如下：
	1.在类上面导包
		import java.util.Scanner;
	2.创建Scanner对象
		Scanner sc=new Scanner(System.in);
	3.接收数据
		接收整数：int i=sc.nextInt();
		接收字符串：String s=sc.next();或者String s=sc.nextLine();
		
	案例：三个和尚加强版。
	
预习重点
	if结构
	for结构
	while结构
	